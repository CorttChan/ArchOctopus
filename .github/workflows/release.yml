# Workflow's name
name: Build ArchOctopus For Win/Mac

## Workflow's trigger
#on:
#  push:
#    tags:
#      - "v*"

# 手动触发测试
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'
      tags:
        description: 'Test build release'
        required: true

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release archoctopus app

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v3
        with:
          ref: dev

      # step2: set up python
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          cache: 'pip'

      # step3: install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip install --upgrade pyinstaller

      # step4: build app for mac/win
      - name: build mac app
        if: matrix.os == 'macos-latest'
        run: |
          pip install -r requirements-dev-osx.txt
          source ./release/build-osx/build.sh

      - name: Install NSIS for win
        if: matrix.os == 'windows-latest'
        run: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop update
          scoop bucket add extras
          scoop install nsis

      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          pip install -r requirements-dev-msw.txt
          echo ${{ github.ref }}
          .\release\build-msw\build.bat v2.0.2

#      # step5: create release
#      - name: release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: "dist_electron/**"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step6: ftp upload
      - name: Upload test result
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./release/dist/
          server-dir: ./app/release/
          exclude: |
            ArchOctopus/**
            *.app
